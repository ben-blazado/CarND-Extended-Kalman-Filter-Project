In file included from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Core:326,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Dense:1,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.h:4,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:1:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In member function ‘void Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::operator()(Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::ResScalar*, Index, const LhsScalar*, const RhsScalar*, Index, Index, Index, Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::ResScalar, Index, Index, Index, Index, RhsScalar*)’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:574:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
  574 |         if(nr==4) traits.initAcc(C3);
      |         ^~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:575:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  575 |                   traits.initAcc(C4);
      |                   ^~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:946:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
  946 |         if(nr==4) R3 = ploadu<ResPacket>(r3);
      |         ^~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:948:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  948 |                   traits.acc(C0, alphav, R0);
      |                   ^~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:951:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
  951 |         if(nr==4) traits.acc(C3, alphav, R3);
      |         ^~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:953:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  953 |                   pstoreu(r0, R0);
      |                   ^~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp: In member function ‘void KalmanFilter::Update(const VectorXd&)’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:46:22: error: ‘Ht’ was not declared in this scope; did you mean ‘H_’?
   46 |   MatrixXd S = H_*P_*Ht + R_;
      |                      ^~
      |                      H_
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:51:9: error: ‘I_’ was not declared in this scope; did you mean ‘x_’?
   51 |   P_ = (I_ - K*H_)*P_;
      |         ^~
      |         x_
In file included from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Core:284,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Dense:1,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.h:4,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:1:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:42:31:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:24: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:45: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   54 |                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   96 |                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
      |                                                  ^~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1> >’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:42:31:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:24: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:45: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   54 |                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   96 |                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
      |                                                  ^~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> > >’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:24: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:45: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   54 |                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   96 |                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
      |                                                  ^~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:24: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:45: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   54 |                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   96 |                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
      |                                                  ^~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:49:55:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:24: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   54 |                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   96 |                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
      |                                                  ^~~~~~~~~~~~~~~~~~
In file included from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Core:284,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Dense:1,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.h:4,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:1:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Matrix<double, -1, -1>; Derived2 = Eigen::Matrix<double, -1, -1>; int Version = 0]’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:42:31:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
  402 |     const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
      |                                                                  ~~~~~~~~~~~~~^~~
  403 |                              : internal::first_aligned(&dst.coeffRef(0), size);
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; int Version = 0]’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::Matrix<double, -1, 1>; int Version = 0]’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
In file included from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Core:284,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Dense:1,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.h:4,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:1:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> > >’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:638:102:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:630:7:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:35:32:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:24: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:45: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   54 |                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   96 |                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
      |                                                  ^~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> > >’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:638:102:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:630:7:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:50:15:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:24: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:45: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   54 |                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   96 |                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
      |                                                  ^~~~~~~~~~~~~~~~~~
In file included from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Core:284,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Dense:1,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.h:4,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:1:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Matrix<double, -1, -1>; Derived2 = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >; int Version = 0]’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:638:102:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:630:7:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>, const Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:35:32:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
  402 |     const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
      |                                                                  ~~~~~~~~~~~~~^~~
  403 |                              : internal::first_aligned(&dst.coeffRef(0), size);
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
In file included from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Core:329,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Dense:1,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.h:4,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:1:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘static void Eigen::internal::general_matrix_vector_product<Index, LhsScalar, 0, ConjugateLhs, RhsScalar, ConjugateRhs, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, 0, ConjugateLhs, RhsScalar, ConjugateRhs, Version>::ResScalar*, Index, RhsScalar) [with Index = long int; LhsScalar = double; bool ConjugateLhs = false; RhsScalar = double; bool ConjugateRhs = false; int Version = 0; Eigen::internal::general_matrix_vector_product<Index, LhsScalar, 0, ConjugateLhs, RhsScalar, ConjugateRhs, Version>::ResScalar = double]’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/GeneralProduct.h:460:110:   required from ‘static void Eigen::internal::gemv_selector<2, 0, true>::run(const ProductType&, Dest&, const typename ProductType::Scalar&) [with ProductType = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/GeneralProduct.h:344:92:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:109:58:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:19:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/products/GeneralMatrixVector.h:145:33: warning: enum constant in boolean context [-Wint-in-bool-context]
  145 |   Index offset1 = (FirstAligned && alignmentStep==1?3:1);
      |                    ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/products/GeneralMatrixVector.h:146:33: warning: enum constant in boolean context [-Wint-in-bool-context]
  146 |   Index offset3 = (FirstAligned && alignmentStep==1?1:3);
      |                    ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
In file included from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Core:284,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Dense:1,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.h:4,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:1:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; int Version = 0]’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:638:102:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:630:7:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:50:15:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
  402 |     const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
      |                                                                  ~~~~~~~~~~~~~^~~
  403 |                              : internal::first_aligned(&dst.coeffRef(0), size);
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
In file included from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Core:284,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Dense:1,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.h:4,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:1:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, 1> >’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; OtherDerived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/GeneralProduct.h:456:48:   required from ‘static void Eigen::internal::gemv_selector<2, 0, true>::run(const ProductType&, Dest&, const typename ProductType::Scalar&) [with ProductType = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/GeneralProduct.h:344:92:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:109:58:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:19:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:24: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:45: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   54 |                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   96 |                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
      |                                                  ^~~~~~~~~~~~~~~~~~
In file included from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Core:284,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Dense:1,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.h:4,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:1:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived2 = Eigen::Matrix<double, -1, 1>; int Version = 0]’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; OtherDerived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/GeneralProduct.h:456:48:   required from ‘static void Eigen::internal::gemv_selector<2, 0, true>::run(const ProductType&, Dest&, const typename ProductType::Scalar&) [with ProductType = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/GeneralProduct.h:344:92:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:109:58:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:19:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
  402 |     const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
      |                                                                  ~~~~~~~~~~~~~^~~
  403 |                              : internal::first_aligned(&dst.coeffRef(0), size);
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
In file included from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Core:284,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Dense:1,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.h:4,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:1:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseNullaryOp.h:334:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Eigen::DenseBase<Derived>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseNullaryOp.h:501:10:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/GeneralProduct.h:452:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:109:58:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:19:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:24: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   54 |                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   96 |                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
      |                                                  ^~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, -1, 1>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, -1, 1>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/GeneralProduct.h:470:14:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:109:58:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:19:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:24: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:45: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   54 |                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   96 |                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
      |                                                  ^~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:638:102:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:630:7:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseNullaryOp.h:501:10:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:109:43:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>; Lhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>; Lhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>; Rhs = const Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:27:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator+(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:35:32:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:24: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   54 |                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   96 |                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
      |                                                  ^~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:638:102:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:630:7:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseNullaryOp.h:501:10:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:109:43:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:19:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:24: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   54 |                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   96 |                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
      |                                                  ^~~~~~~~~~~~~~~~~~
In file included from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Core:284,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Dense:1,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.h:4,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:1:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived2 = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; int Version = 0]’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseNullaryOp.h:334:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Eigen::DenseBase<Derived>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseNullaryOp.h:501:10:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/GeneralProduct.h:452:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:109:58:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:19:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
  402 |     const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
      |                                                                  ~~~~~~~~~~~~~^~~
  403 |                              : internal::first_aligned(&dst.coeffRef(0), size);
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >; Derived2 = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; int Version = 0]’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, -1, 1>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, -1, 1>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/GeneralProduct.h:470:14:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:109:58:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:19:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Matrix<double, -1, -1>; Derived2 = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; int Version = 0]’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:638:102:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:630:7:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseNullaryOp.h:501:10:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:109:43:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>; Lhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>; Lhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = const Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>; Rhs = const Eigen::Matrix<double, -1, -1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:27:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator+(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::GeneralProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 5>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 5>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:35:32:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; int Version = 0]’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:638:102:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:630:7:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseNullaryOp.h:501:10:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:109:43:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:19:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
In file included from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Core:284,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Dense:1,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.h:4,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:1:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, 1>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:638:102:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:630:7:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:109:58:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:19:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:24: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:51:45: warning: enum constant in boolean context [-Wint-in-bool-context]
   50 |     MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                        && int(DstIsAligned) && int(SrcIsAligned),
      |                        ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   54 |                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   96 |                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
      |                                                  ^~~~~~~~~~~~~~~~~~
In file included from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Core:284,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/Dense:1,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.h:4,
                 from /home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:1:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; int Version = 0]’:
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:638:102:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/PlainObjectBase.h:630:7:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:109:58:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, 1>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = const Eigen::Matrix<double, -1, 1>; Rhs = const Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:19:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 4>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/navyg8r/carnd-extended-kalman-filter-project/src/kalman_filter.cpp:44:23:   required from here
/home/navyg8r/carnd-extended-kalman-filter-project/src/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
  402 |     const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
      |                                                                  ~~~~~~~~~~~~~^~~
  403 |                              : internal::first_aligned(&dst.coeffRef(0), size);
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
make[2]: *** [CMakeFiles/ExtendedKF.dir/build.make:102: CMakeFiles/ExtendedKF.dir/src/kalman_filter.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:76: CMakeFiles/ExtendedKF.dir/all] Error 2
make: *** [Makefile:84: all] Error 2
